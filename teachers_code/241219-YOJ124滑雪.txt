#include <stdio.h>

int max_length = 0;

#define UP 0
#define RIGHT 1
#define DOWN 2
#define LEFT 3

#define _DEBUG 1

// my_try
void my_try( int i, int j, int R, int C, int panmian[50][50], int cur_length)
{
	int can_go_from_here = 0;// true

	int dir;
	for(dir=UP; dir<= LEFT; dir++)
	{
		int newi;
		int newj;
		if (dir == UP)
		{
			newi = i-1;
			newj = j;
		}
		if (dir == RIGHT )
		{
			newi = i;
			newj = j+1;

		}
		if (dir == DOWN )
		{
			newi = i+1;
			newj = j;
		}
		if (dir == LEFT  )
		{
			newi = i;
			newj = j-1;
		}

		if (newi >=0 && newi<= R-1 && newj >=0 && newj<=C-1)
		{
			if (panmian[ newi] [newj] < panmian[i][j])
			{
				can_go_from_here =1;

				if (_DEBUG)
					printf("new i=%d, newj=%d\n", newi, newj);
				my_try( newi, newj, R, C, panmian, cur_length +1);
			}
		} // if
	}// for

	if (can_go_from_here  ==0)
		if (cur_length >max_length )
		{
			if (_DEBUG)
				printf("cur_length = %d\n", cur_length );
			max_length  = cur_length ;
		}
}

// main
int main()
{
	int R;
	int C;
	scanf("%d%d", &R, &C);

	int panmian[50][50];
	int i;
	int j;
	for(i=0; i<R; i++)
		for(j=0; j<C; j++)
			scanf("%d", &panmian[i][j]);
	//
	//  from any point as beginning
	for(i=0; i<R; i++)
		for(j=0; j<C; j++)
		{
			int cur_length = 1;

			if (_DEBUG)
				printf("try from begin row=%d col=%d\n", i,j);

			my_try( i, j, R,C, panmian, cur_length);
		}

	printf("%d\n", max_length);
	return 0;
}
